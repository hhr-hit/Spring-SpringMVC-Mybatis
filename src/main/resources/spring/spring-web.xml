<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven />

    <!-- 2.静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->

    <!--启用默认Servlet-->
    <mvc:default-servlet-handler/>
<!--    <mvc:resources mapping="/images/**" location="/images/" />-->
<!--    <mvc:resources location="/resources/images/" mapping="/images/**"/>-->

    <!-- 添加注解驱动 -->
<!--    <mvc:annotation-driven/>-->
    <!--
        通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器
        设置不过滤内容，比如:css,js,img 等资源文件
        location指的是本地的真实路径，mapping指的是映射到的虚拟路径。
    -->
<!--    <mvc:resources mapping="/resources/images/**" location="/resources/"/>-->

    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
<!--        <property name="prefix" value="/" />-->
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>
<!--    &lt;!&ndash; 视图解析器1:html视图解析器 必须先配置freemarkerConfig,注意html是没有prefix前缀属性的 &ndash;&gt;-->
<!--    <bean id="freemarkerConfig"-->
<!--          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
<!--        <property name="freemarkerSettings">-->
<!--            <bean-->
<!--                    class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
<!--                <property name="properties">-->
<!--                    <props>-->
<!--                        <prop key="default_encoding">utf-8</prop>-->
<!--                        <prop key="output_encoding">utf-8</prop>-->
<!--                    </props>-->
<!--                </property>-->
<!--            </bean>-->
<!--        </property>-->
<!--        <property name="templateLoaderPath">-->
<!--            <value>/WEB-INF/views/</value>-->
<!--        </property>-->
<!--    </bean>-->
<!--    <bean id="htmlviewResolver"-->
<!--          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"-->
<!--          p:suffix=".html" p:order="0">-->
<!--        <property name="contentType" value="text/html;charset=UTF-8" />-->
<!--    </bean>-->
    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="com.hhr.web" />

</beans>